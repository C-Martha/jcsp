//  JCSP - CSP for Java: an implementation of Communicating Sequential Processes (CSP) for Java.
// 
//   Copyright Â© 2010 Russel Winder <russel@russel.org.uk>
// 
//   This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser
//   General Public License as published by the Free Software Foundation; either version 2.1 of the License,
//   or (at your option) any later version.
//   
//   This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
//   the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
//   Public License for more details.
//   
//   You should have received a copy of the GNU Lesser General Public License along with this library; if not,
//   write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

def projectTitle = 'The JCSP Library'
def projectDescription = 'This library contains classes realizing Communicating Sequential Processes (CSP) for use in Java code.'
group = 'org.codehaus.jcsp'
def artefactBaseName = 'jcsp'
version = '1.1-rc5-SNAPSHOT'

apply plugin : 'java'
apply plugin : 'osgi'
apply plugin : 'maven'
apply plugin : 'code-quality'

archivesBaseName = artefactBaseName

sourceCompatibility = 5
targetCompatibility = 5

sourceSets {
  main {
    java {
      srcDir 'src'
      exclude 'jcsp-demos/**'
      exclude 'org/jcsp/test/**'
    }
  }
  test {
    java {
      srcDir 'src'
      include 'org/jcsp/test/**'
      //
      //  TODO:  Fix this code so it compiles.
      //
      exclude 'org/jcsp/test/TestExtendedRendezvous.java'
    }
  }
}

dependencies {
  testCompile 'junit:junit:4.8.1'
}

def theVendor = 'Kent University'

jar {
  manifest {
    name = projectTitle
    version = version
    symbolicName = artefactBaseName
    //instruction 'Bundle-Vendor' , theVendor
    instruction 'Bundle-Description' , group
    //instruction 'Bundle-DocURL' , ''
    instruction 'Built-By' , System.properties.'user.name'
    instruction 'Extension-Name' , artefactBaseName
    instruction 'Specification-Title' , projectTitle
    instruction 'Specification-Version' , version
    //instruction 'Specification-Vendor' , theVendor
    instruction 'Implementation-Title' , projectTitle
    instruction 'Implementation-Version' , version
    //instruction 'Implementation-Vendor' , theVendor
    instruction 'Implementation-Title', artefactBaseName
    instruction 'Implementation-Version', version
    //instruction 'provider', theVendor
    instruction 'Export-Package', '*'
  }
}

def projectTitleForDocumentation = projectTitle + ' ' + version

javadoc {
  options.overview ( 'overview.html' )
  options.showAll ( )
  options.encoding ( 'UTF-8' )
  options.setUse ( true )
  options.author ( true )
  options.version ( true )
  options.source ( sourceCompatibility.toString ( ) )
  options.windowTitle ( projectTitleForDocumentation )
  options.docTitle ( projectTitleForDocumentation )
  //options.header ( projectTitleForDocumentation )
  options.footer ( 'Copyright &#169; 1997&#8211;2010  P.D.Austin and P.H.Welch.  All Rights Reserved.' )
  //options.excludePackageNames ( 'jcsp-demos.*,org.jcsp.test.*' )
}
javadoc.doFirst {
  javadoc.title = projectTitleForDocumentation
  javadoc.options.docTitle = javadoc.title
}

//  The Maven plugin uses project.name as the default artefact id, force the artefact id to be the one it
//  should be.

configure ( install.repositories.mavenInstaller ) {
  pom.artifactId = artefactBaseName
}

task wrapper ( type : Wrapper ) {
    jarPath = 'wrapper'
    gradleVersion = '0.9-20100623131307+1000'
}

defaultTasks 'install'
